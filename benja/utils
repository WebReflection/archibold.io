#!/usr/bin/env bash

source <(curl -s https://archibold.io/benja/logo)
source <(curl -s https://archibold.io/require)

require echomd

### Works on ArchLinux, Debian, Ubuntu, macOS

createPartitions() {
  local DISK=$1
  local ROOT_SIZE=$2
  if [ "$(uname)" = "Darwin" ]; then
    sudo /usr/sbin/diskutil partitionDisk $DISK 3 MBR \
      FAT32 BOOT 120M \
      FAT32 ROOT $ROOT_SIZE \
      FAT32 APP R
    sleep 2
    unmount $DISK
  else
    sudo parted --script $DISK mklabel msdos
    sudo parted --script --align optimal $DISK mkpart primary fat32 2048s 120M
    sudo parted --script --align optimal $DISK mkpart primary ext4 120M $ROOT_SIZE
    sudo parted --script --align optimal $DISK mkpart primary fat32 $ROOT_SIZE 100%
    sudo parted --script $DISK set 1 boot on
    sudo parted --script $DISK set 2 hidden
  fi
}

diskSize() {
  local disk="$1"
  local bytes=
  if [ "$(uname)" = "Darwin" ]; then
    for size in $(/usr/sbin/diskutil info $disk | grep 'Disk Size:' | sed -e 's/^[^(]*(//'); do
      if [ "$bytes" = "" ]; then
        ((bytes=$size/1024))
      fi
    done
  else
    bytes=$(sudo fdisk -s $disk)
  fi
  echo $bytes
}

echoWithLogo() {
  echomd "${BENJA_LOGO}
$@"
}

findTheDisk() {
  local i=0
  local choice=
  local disks=
  local disk=
  echoWithLogo '# Select SD Card
  Please select the disk you would like to use
  to install Arch Linux (pick a number).'
  echo ''

  if [ "$(uname)" = "Darwin" ]; then
    for disk in $(/usr/sbin/diskutil list | grep '/dev/'); do
      if [ "${disk:0:5}" = "/dev/" ]; then
        ((i=i+1))
        disks="$disks ${disk:5}"
        echo "  $(tput bold)$i$(tput sgr0) $disk $(grabDiskSize /dev/$disk)"
      fi
    done
  else
    for disk in $(lsblk --output NAME | grep -v '^loop'); do
      if [ "$(echo $disk | sed -e 's/^[a-z]//')" != "$disk" ]; then
        ((i=i+1))
        disks="$disks $disk"
        printf "  $(tput bold)$i$(tput sgr0) %-24s %-6s\n" /dev/$disk $(grabDiskSize /dev/$disk)
      fi
    done
  fi

  echo ''
  if [ "$i" -le "9" ]; then
    read -n1 choice
  else
    read -n2 choice
  fi

  if [ "$choice" -gt "0" ] && [ "$choice" -le "$i" ]; then
    i=0
    for disk in $disks; do
      ((i=i+1))
      if [ "$i" = "$choice" ]; then
        BENJA_DISK="/dev/$disk"
      fi
    done
  else
    echomd "  #red(*Nope*), let's try again ... "
    sleep 2 && clear && findTheDisk
  fi
}

formatPartitions() {
  local DISK=$1
  local BOOT=$2
  local ROOT=$3
  local APP=$4

  if [ "$(uname)" = "Darwin" ]; then
    yes | sudo /opt/gnu/sbin/mkfs.ext4 "$ROOT"
  else
    sudo mkfs.vfat "$BOOT"
    sudo mkfs.fat -F32 "$APP"
    sudo dosfslabel "$APP" APP
    yes | sudo mkfs.ext4 "$ROOT"
  fi
}

getPartitions() {
  local DISK=$1
  local POSSIBLEDISKS=$(ls ${DISK}*)
  local BOOT=""
  local ROOT=""
  local APP=""
  local CHOICE=""
  for CHOICE in $POSSIBLEDISKS; do
    if [ "$CHOICE" != "$DISK" ]; then
      if [ "$BOOT" = "" ]; then
        BOOT="$CHOICE"
      else
        if [ "$ROOT" = "" ]; then
          ROOT="$CHOICE"
        else
          APP="$CHOICE"
        fi
      fi
    fi
  done
  echo "${BOOT} ${ROOT} ${APP}"
}

grabDiskSize() {
  local found=0
  local size=
  if [ "$(uname)" = "Darwin" ]; then
    /usr/sbin/diskutil info $disk | grep 'Disk Size:' | sed -e 's/Disk Size: *//' | sed -e 's/([^)]*)//' | sed -e 's/([^)]*)//'
  else
    for size in $(lsblk --output SIZE $1); do
      if [ "$found" = "0" ]; then
        found=1
      else
        echo $size
        return
      fi
    done
  fi
}

installOS() {
  local ARCHIVE="$1"
  local DISK=$2
  local BOOT=$3
  local ROOT=$4

  mkdir -p boot
  mkdir -p root
  if [ "$(uname)" = "Darwin" ]; then
    sudo /usr/sbin/diskutil mount -mountPoint ./boot "$BOOT"
    sudo fuse-ext2 "$ROOT" ./root -o rw+,allow_other,uid=501,gid=20
  else
    sudo mount "$BOOT" boot
    sudo mount "$ROOT" root
  fi
  # this might take forever in macOS
  sudo bsdtar -xvpf "$ARCHIVE" -C root 2>&1 | while read -r line; do echo -ne "$line\033[K\r"; done
  echo -ne "\033[K\r"
  echo '   .. moving boot files ..'
  sudo mv root/boot/* boot
  echo -ne "\033[K\r"
  echo '   .. patching /etc/fstab ..'
  sudo sed -i 's/mmcblk0/mmcblk1/g' root/etc/fstab
}

targetPlatform() {
  local choice=
  echoWithLogo '# Target Platform
  Please select the SBC you would like to use.

  *0* Raspberry Pi Zero V2
  *3* Raspberry Pi 3
  *4* Raspberry Pi 4
'
  read -n1 choice

  if [ "$choice" = "0" ] || [ "$choice" = "3" ] || [ "$choice" = "4" ]; then
    BENJA_SETUP="rpi3"
    BENJA_SBC="Raspberry Pi ${choice}"
    BENJA_ARCHIVE="ArchLinuxARM-rpi-aarch64-latest.tar.gz"
    # elif [ "$choice" = "2" ]; then
    #   BENJA_SETUP="rpi2"
    #   BENJA_SBC="Raspberry Pi 2"
    #   BENJA_ARCHIVE="ArchLinuxARM-rpi-2-latest.tar.gz"
    # elif [ "$choice" = "3" ]; then
    #   BENJA_SETUP="rpi3"
    #   BENJA_SBC="Raspberry Pi 3"
    #   BENJA_ARCHIVE="ArchLinuxARM-rpi-aarch64-latest.tar.gz"
    # elif [ "$choice" = "4" ]; then
    #   BENJA_SETUP="rpi4"
    #   BENJA_SBC="Raspberry Pi 4"
    #   BENJA_ARCHIVE="ArchLinuxARM-rpi-4-latest.tar.gz"
  else
    echomd "  #red(*Nope*), let's try again ... "
    sleep 2 && clear && targetPlatform
  fi
}

unmount() {
  local disk="$1"
  if [ "$(uname)" = "Darwin" ]; then
    sudo /usr/sbin/diskutil unmountDisk $disk* 2> /dev/null
  else
    sudo umount $disk* 2> /dev/null
  fi
}
