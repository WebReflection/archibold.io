#!/usr/bin/env bash

if [ "$(whoami)" = "root" ]; then
    echo 'you cannot be root to make a package'
    exit 1
fi

if [ "$(pacman -Qs cairo-gles)" = "" ]; then
    echo "Please install cairo-glesv2-$(uname -m) via aur"
    exit 1
fi

cd /tmp
yes yes | git clone https://aur.archlinux.org/wpewebkit.git
source wpewebkit/PKGBUILD
rm -rf wpewebkit

if [ "$pkgver" = "" ]; then
    echo 'unable to retrieve the version'
    exit 1
fi

echo "Building wpewebkit $pkgver"
sleep 2

sudo pacman -Sy

# dependencies (less cairo)
sudo pacman -S --needed --noconfirm libxslt gst-plugins-base-libs libepoxy libsoup libwebp \
         harfbuzz-icu woff2 openjpeg2 libseccomp bubblewrap xdg-dbus-proxy \
		 geoclue at-spi2-atk libwpe

# make dependencies
sudo pacman -S --needed --noconfirm base-devel gperf ruby cmake python ninja gtk-doc file

getHash() {
    for hash in $("${1}sum" $2); do
        echo $hash
        return
    done
}

mkdir -p ~/aur/wpewebkit
cd ~/aur/wpewebkit

if [ ! -f wpewebkit-${pkgver}.tar.xz ]; then
    curl -LO https://wpewebkit.org/releases/wpewebkit-${pkgver}.tar.xz
    tar -xf wpewebkit-${pkgver}.tar.xz
    # sed -i -r 's/U16_NEXT(.*)/U16_NEXT\1;/g' wpewebkit-${pkgver}/Source/WTF/wtf/URLHelpers.cpp
    # sed -i -r 's/U16_NEXT(.*)/U16_NEXT\1;/g' wpewebkit-${pkgver}/Source/WebCore/dom/Document.cpp
fi

if [ ! -d wpewebkit-${pkgver} ]; then
    echo 'unable to find the directory'
    exit 1
fi

arch="$(uname -m)"
pkgname="wpewebkit-gl-$arch"
pkgtar="$pkgname-$pkgver.tar.gz"

cmake -H"wpewebkit-${pkgver}" -Bbuild \
        -DCMAKE_BUILD_TYPE=Release \
        -DCMAKE_INSTALL_PREFIX=/usr \
        -DCMAKE_INSTALL_LIBDIR=/usr/lib \
        -DCMAKE_SKIP_RPATH=ON \
        -DPYTHON_EXECUTABLE=/usr/bin/python \
        -DENABLE_GTKDOC=ON \
        -DENABLE_ACCELERATED_2D_CANVAS=ON \
        -DPORT=WPE \
        -GNinja

cmake --build build

if [[ ! $? -eq 0 ]]; then
    echo 'unable to build'
    exit $?
fi

rm -rf ~/aur/builds/$pkgname
mkdir -p ~/aur/builds/$pkgname

DESTDIR=~/aur/builds/$pkgname cmake --build build --target install

mkdir -p ~/git/
cd ~/git
if [ ! -d aur ]; then
    yes yes | git clone git@github.com:WebReflection/aur.git
fi

cd ~/git/aur/

git add .
git reset --hard
git pull --rebase

rm -rf $pkgtar
mv ~/aur/builds/$pkgname/usr ./
tar -czf $pkgtar usr
rm -rf usr

mkdir -p $pkgname
cd $pkgname

echo "# Maintainer: Andrea Giammarchi <andrea.giammarchi@gmail.com>
pkgname=$pkgname
pkgver=$pkgver
arch=($arch)
pkgrel=1
pkgdesc='Web content engine library optimized for embedded devices (gl version)'
url='https://wpewebkit.org'
license=(custom)
groups=(wpe)
provides=('wpewebkit' 'wpewebkit-git')
conflicts=('wpewebkit' 'wpewebkit-git')
depends=(cairo libxslt gst-plugins-base-libs libepoxy libsoup libwebp
         harfbuzz-icu woff2 openjpeg2 libseccomp bubblewrap xdg-dbus-proxy
		 geoclue at-spi2-atk libwpe)
source=('https://webreflection.github.io/aur/$pkgtar')
md5sums=('$(getHash md5 ~/git/aur/$pkgtar)')
sha1sums=('$(getHash sha1 ~/git/aur/$pkgtar)')
sha256sums=('$(getHash sha256 ~/git/aur/$pkgtar)')
sha512sums=('$(getHash sha512 ~/git/aur/$pkgtar)')
">PKGBUILD

echo 'package () {
    cp -R "${srcdir}/usr" "${pkgdir}"
}'>>PKGBUILD

makepkg --printsrcinfo > .SRCINFO

cd ~/git/aur/
git add .
git commit -m "Pushing ${pkgname}-${pkgver}"
git push

echo ""
echo "$(tput bold)$pkgname$(tput sgr0) successfully uploaded"
echo ""
