#!/usr/bin/env bash

if [ "$(whoami)" = "root" ]; then
    echo 'you cannot be root to make a package'
    exit 1
fi

if [ "$(uname -m)" != "x86_64" ] && [ "$(pacman -Qs cairo-gles)" = "" ]; then
    echo "Please install cairo-glesv2-bin or cairo-glesv3-bin via aur"
    exit 1
fi

cd /tmp
yes yes | git clone --single-branch --branch packages/wpewebkit https://github.com/archlinux/svntogit-packages.git
source svntogit-packages/trunk/PKGBUILD
rm -rf svntogit-packages

if [ "$pkgver" = "" ]; then
    echo 'unable to retrieve the version'
    exit 1
fi

echo ''
echo -e "\x1b[7m\x1b[1m Building wpewebkit $pkgver \x1b[0m"
echo ''
sleep 2

sudo pacman -Sy

# dependencies (less cairo)
sudo pacman -S --needed --noconfirm libxslt gst-plugins-base-libs libepoxy libsoup libwebp \
    harfbuzz-icu woff2 openjpeg2 libseccomp bubblewrap xdg-dbus-proxy \
    geoclue at-spi2-atk libwpe hyphen \
    qt5-quickcontrols2 libmanette

sudo pacman -S --needed --noconfirm gst-plugin-wpe

# make dependencies
sudo pacman -S --needed --noconfirm base-devel gperf ruby cmake python ninja gtk-doc file

addLicense() {
    local _f
    cd ~/aur/wpewebkit/wpewebkit-${pkgver}
    mkdir -p ~/aur/builds/$pkgname/usr/share/licenses/${pkgname}/
    while IFS= read -d $'\0' -r _f ; do
        echo "### ${_f} ###" ; cat "${_f}" ; echo
    done < <(find Source -name COPYING -or -name 'LICENSE*' -print0 | sort -zu) > ~/aur/builds/$pkgname/usr/share/licenses/${pkgname}/LICENSE
}

getHash() {
    for hash in $("${1}sum" $2); do
        echo $hash
        return
    done
}

mkdir -p ~/aur/wpewebkit
cd ~/aur/wpewebkit

if [ ! -f wpewebkit-${pkgver}.tar.xz ]; then
    curl -LO $url/releases/$pkgname-$pkgver.tar.xz
    tar -xf wpewebkit-${pkgver}.tar.xz
    if [ "${pkgver}" = "2.30.1" ]; then
        cd wpewebkit-${pkgver}
        git init
        git apply <(curl -Ls http://sprunge.us/Ei4PeM)
        cd ..
    fi
fi

if [ ! -d wpewebkit-${pkgver} ]; then
    echo 'unable to find the directory'
    exit 1
fi

arch="$(uname -m)"
if [ "$arch" = "armv7h" ]; then
    arch="armv7l"
fi

pkgname="wpewebkit-bin"
pkgtar="$pkgname-$arch-$pkgver.tar.gz"

cmake -H"wpewebkit-${pkgver}" -Bbuild       \
        -DCMAKE_BUILD_TYPE=Release          \
        -DCMAKE_INSTALL_PREFIX=/usr         \
        -DCMAKE_INSTALL_LIBDIR=/usr/lib     \
        -DCMAKE_SKIP_RPATH=ON               \
        -DPYTHON_EXECUTABLE=/usr/bin/python \
        -DENABLE_GTKDOC=ON                  \
        -DENABLE_ACCELERATED_2D_CANVAS=ON   \
        -DENABLE_ENCRYPTED_MEDIA=ON         \
        -DENABLE_WPE_QT_API=OFF             \
        -DPORT=WPE                          \
        -GNinja

ninja

cmake --build build

if [[ ! $? -eq 0 ]]; then
    echo 'unable to build'
    exit $?
fi

rm -rf ~/aur/builds/$pkgname
mkdir -p ~/aur/builds/$pkgname

DESTDIR=~/aur/builds/$pkgname cmake --build build --target install

addLicense

mkdir -p ~/git/
cd ~/git
if [ ! -d aur ]; then
    yes yes | git clone git@github.com:WebReflection/aur.git
fi

cd ~/git/aur/

git add .
git reset --hard
git pull --rebase

rm -rf $pkgtar
mv ~/aur/builds/$pkgname/usr ./
tar -czf $pkgtar usr
rm -rf usr

mkdir -p $pkgname
cd $pkgname

echo "# Maintainer: Andrea Giammarchi <andrea.giammarchi@gmail.com>
pkgname=$pkgname
pkgver=$pkgver
arch=(aarch64 armv7h armv7l x86_64)
pkgrel=1
pkgdesc='Web content engine library optimized for embedded devices (binary version)'
url='https://wpewebkit.org'
license=(custom)
groups=(wpe)
provides=('wpewebkit' 'wpewebkit-git')
conflicts=('wpewebkit' 'wpewebkit-git')
depends=(cairo fontconfig freetype2 glib2 harfbuzz harfbuzz-icu icu libjpeg
         libepoxy libgcrypt libsoup libxml2 zlib libpng sqlite libwebp libwpe
         atk at-spi2-atk openjpeg2 woff2 libtasn1 libxslt libsystemd bubblewrap
         libseccomp xdg-dbus-proxy gstreamer gst-plugins-base-libs libxkbcommon
         wayland wpebackend-fdo)
optdepends=('geoclue: Geolocation support'
            'gst-plugins-good: media decoding'
            'gst-plugins-bad: media decoding'
            'gst-libav: nonfree media decoding')
source_aarch64=('${pkgname}-aarch64::https://webreflection.github.io/aur/${pkgname}-aarch64-${pkgver}.tar.gz')
source_armv7h=('${pkgname}-armv7h::https://webreflection.github.io/aur/${pkgname}-armv7l-${pkgver}.tar.gz')
source_armv7l=('${pkgname}-armv7l::https://webreflection.github.io/aur/${pkgname}-armv7l-${pkgver}.tar.gz')
source_x86_64=('${pkgname}-x86::https://webreflection.github.io/aur/${pkgname}-x86_64-${pkgver}.tar.gz')
">TEMPLATE

cd ~/git/aur/
git add .
git commit -m "Pushing ${pkgname}-${pkgver}"
git push

echo ""
echo "$(tput bold)$pkgname$(tput sgr0) successfully uploaded"
echo ""
