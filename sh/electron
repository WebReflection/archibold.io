#!/usr/bin/env bash

sudo pacman -S --needed --noconfirm \
  mesa-libgl xf86-video-intel \
  fbset sed grep npm \
  xorg-server xorg-xinit xf86-input-synaptics \
  libxrandr libxinerama libxcursor libxtst \
  gnome-themes-standard adwaita-icon-theme gtk-engines \
  libnotify nss pipewire alsa-plugins

# configure npm
if [ ! -d ~/.npm-packages/bin ]; then
  mkdir -p ~/.npm-packages/bin
  npm config set prefix '~/.npm-packages'
  echo '
# npm and nodejs global modules
export PATH="$PATH:$HOME/.npm-packages/bin"
export NODE_PATH="$NODE_PATH:$HOME/.npm-packages/lib/node_modules"
'>>~/.bashrc
  source ~/.bashrc
fi

if [ ! -f ~/www/package.json ]; then
  mkdir -p ~/www

  echo '{
  "name"    : "SinonOS",
  "version" : "0.0.1",
  "main"    : "main.js"
}'>~/www/package.json

  echo "'use strict';

const
  WIDTH = parseFloat(process.env.WIDTH),
  HEIGHT = parseFloat(process.env.HEIGHT),
  electron  = require('electron'),
  app = electron.app,
  BrowserWindow = electron.BrowserWindow
;

var mainWindow = null;

app
  .on('window-all-closed', function() {
    if (process.platform != 'darwin') app.quit();
  })
  .on('ready', function() {
    mainWindow = new BrowserWindow({
      x: 0,
      y: 0,
      width: WIDTH,
      height: HEIGHT,
      darkTheme: true,
      show: false,
      frame: false,
      resizable: false
    });
    mainWindow.loadURL('file://' + __dirname + '/index.html');
    mainWindow.webContents.once('dom-ready', function() {
      // apparently inevitable to avoid flicking
      setTimeout(function () {
        mainWindow.setKiosk(true);
      }, 333);      
    });
    mainWindow.on('closed', function() {
      mainWindow = null;
    });
  });
">~/www/main.js

  echo '<!DOCTYPE html>
<html>
  <head>
    <meta charset="UTF-8">
    <title>SinonOS</title>
    <style>
    html {
      background: #000;
      color: #FFF;
    }
    </style>
  </head>
  <body>
    Resolution is <script>document.write(process.env.WIDTH + "x" + process.env.HEIGHT)</script><br>
    NodeJS <script>document.write(process.versions.node)</script><br>
    Chrome <script>document.write(process.versions.chrome)</script><br>
    Electron <script>document.write(process.versions.electron)</script><br>
  </body>
</html>'>~/www/index.html
fi

if [ ! -f ~/.xinitrc ];then
  echo "WIDTH=\$(fbset | grep 'mode ' | sed -e 's/mode \"//' | sed -e 's/x.*//') HEIGHT=\$(fbset | grep 'mode ' | sed -e 's/mode \"[0-9]*x//' | sed -e 's/\"//') electron ~/www/">~/.xinitrc
fi

# npm install -g electron-prebuilt
# startx -- vt1 &> /dev/null